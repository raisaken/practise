{"ast":null,"code":"var _jsxFileName = \"/home/sakenrai/Projects/test/socket/client/src/socket/Socket.jsx\",\n    _s = $RefreshSig$();\n\n// import \"./App.css\";\nimport io from \"socket.io-client\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:8000\");\n\nfunction Socket() {\n  _s();\n\n  //Room State\n  const [room, setRoom] = useState(\"\"); // Messages States\n\n  const [message, setMessage] = useState(\"\");\n  const [messageReceived, setMessageReceived] = useState(\"\");\n\n  const joinRoom = () => {\n    if (room !== \"\") {\n      socket.emit(\"join_room\", room);\n    }\n  };\n\n  const sendMessage = () => {\n    socket.emit(\"send_message\", {\n      message,\n      room\n    });\n  };\n\n  useEffect(() => {\n    socket.on(\"receive_message\", data => {\n      setMessageReceived(data.message);\n    });\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Room Number...\",\n      onChange: event => {\n        setRoom(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: joinRoom,\n      children: \" Join Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Message...\",\n      onChange: event => {\n        setMessage(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \" Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Message:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), messageReceived]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Socket, \"ZdKt/j8WlpNmwOxrWqm2c6rJW74=\");\n\n_c = Socket;\nexport default Socket;\n\nvar _c;\n\n$RefreshReg$(_c, \"Socket\");","map":{"version":3,"sources":["/home/sakenrai/Projects/test/socket/client/src/socket/Socket.jsx"],"names":["io","useEffect","useState","socket","connect","Socket","room","setRoom","message","setMessage","messageReceived","setMessageReceived","joinRoom","emit","sendMessage","on","data","event","target","value"],"mappings":";;;AAAA;AACA,OAAOA,EAAP,MAAe,kBAAf;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,MAAM,GAAGH,EAAE,CAACI,OAAH,CAAW,uBAAX,CAAf;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC,CAFgB,CAIhB;;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,EAAD,CAAtD;;AAEA,QAAMU,QAAQ,GAAG,MAAM;AACrB,QAAIN,IAAI,KAAK,EAAb,EAAiB;AACfH,MAAAA,MAAM,CAACU,IAAP,CAAY,WAAZ,EAAyBP,IAAzB;AACD;AACF,GAJD;;AAMA,QAAMQ,WAAW,GAAG,MAAM;AACxBX,IAAAA,MAAM,CAACU,IAAP,CAAY,cAAZ,EAA4B;AAAEL,MAAAA,OAAF;AAAWF,MAAAA;AAAX,KAA5B;AACD,GAFD;;AAIAL,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,MAAM,CAACY,EAAP,CAAU,iBAAV,EAA8BC,IAAD,IAAU;AACrCL,MAAAA,kBAAkB,CAACK,IAAI,CAACR,OAAN,CAAlB;AACD,KAFD;AAGD,GAJQ,EAIN,CAACL,MAAD,CAJM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AACE,MAAA,WAAW,EAAC,gBADd;AAEE,MAAA,QAAQ,EAAGc,KAAD,IAAW;AACnBV,QAAAA,OAAO,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD;AAJH;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAQ,MAAA,OAAO,EAAEP,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AACE,MAAA,WAAW,EAAC,YADd;AAEE,MAAA,QAAQ,EAAGK,KAAD,IAAW;AACnBR,QAAAA,UAAU,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACD;AAJH;AAAA;AAAA;AAAA;AAAA,YARF,eAcE;AAAQ,MAAA,OAAO,EAAEL,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,EAgBGJ,eAhBH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA3CQL,M;;KAAAA,M;AA6CT,eAAeA,MAAf","sourcesContent":["// import \"./App.css\";\nimport io from \"socket.io-client\";\nimport { useEffect, useState } from \"react\";\n\nconst socket = io.connect(\"http://localhost:8000\");\n\nfunction Socket() {\n  //Room State\n  const [room, setRoom] = useState(\"\");\n\n  // Messages States\n  const [message, setMessage] = useState(\"\");\n  const [messageReceived, setMessageReceived] = useState(\"\");\n\n  const joinRoom = () => {\n    if (room !== \"\") {\n      socket.emit(\"join_room\", room);\n    }\n  };\n\n  const sendMessage = () => {\n    socket.emit(\"send_message\", { message, room });\n  };\n\n  useEffect(() => {\n    socket.on(\"receive_message\", (data) => {\n      setMessageReceived(data.message);\n    });\n  }, [socket]);\n  return (\n    <div className=\"App\">\n      <input\n        placeholder=\"Room Number...\"\n        onChange={(event) => {\n          setRoom(event.target.value);\n        }}\n      />\n      <button onClick={joinRoom}> Join Room</button>\n      <input\n        placeholder=\"Message...\"\n        onChange={(event) => {\n          setMessage(event.target.value);\n        }}\n      />\n      <button onClick={sendMessage}> Send Message</button>\n      <h1> Message:</h1>\n      {messageReceived}\n    </div>\n  );\n}\n\nexport default Socket;\n"]},"metadata":{},"sourceType":"module"}