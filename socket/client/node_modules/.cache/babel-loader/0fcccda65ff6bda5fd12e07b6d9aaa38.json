{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nexport const fetchTodo = createAsyncThunk(\"todos\", async () => {\n  return fetch(\"https://jsonplaceholder.typicode.com/todos?_limit=5\").then(res => res.json());\n});\nconst CounterSlice = createSlice({\n  name: \"counter\",\n  initialState: {\n    currentState: \"loading\",\n    todos: []\n  },\n  reducers: {\n    increment(state, action) {\n      state.value = state.value + 1;\n    },\n\n    incrementByValue(state, action) {\n      state.value += action.payload;\n    }\n\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchTodo.fulfilled, (state, action) => {\n      state.status = \"fulfilled\";\n      state.todos = action.payload;\n    });\n  }\n});\nexport const {\n  increment,\n  decrement,\n  incrementByValue\n} = CounterSlice.actions;\nexport default CounterSlice.reducer;","map":{"version":3,"sources":["/home/sakenrai/Projects/test/socket/client/src/ReduxToolkit/features/posts/PostSlice.jsx"],"names":["createAsyncThunk","createSlice","fetchTodo","fetch","then","res","json","CounterSlice","name","initialState","currentState","todos","reducers","increment","state","action","value","incrementByValue","payload","extraReducers","builder","addCase","fulfilled","status","decrement","actions","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAEA,OAAO,MAAMC,SAAS,GAAGF,gBAAgB,CAAC,OAAD,EAAU,YAAY;AAC7D,SAAOG,KAAK,CAAC,qDAAD,CAAL,CACNC,IADM,CAEJC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAFJ,CAAP;AAID,CALwC,CAAlC;AAOP,MAAMC,YAAY,GAAGN,WAAW,CAAC;AAC/BO,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,YAAY,EAAE,SADF;AAEZC,IAAAA,KAAK,EAAE;AAFK,GAFiB;AAM/BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACvBD,MAAAA,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACE,KAAN,GAAc,CAA5B;AACD,KAHO;;AAIRC,IAAAA,gBAAgB,CAACH,KAAD,EAAQC,MAAR,EAAgB;AAC9BD,MAAAA,KAAK,CAACE,KAAN,IAAeD,MAAM,CAACG,OAAtB;AACD;;AANO,GANqB;AAc/BC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CAACC,OAAR,CAAgBnB,SAAS,CAACoB,SAA1B,EAAqC,CAACR,KAAD,EAAQC,MAAR,KAAmB;AACtDD,MAAAA,KAAK,CAACS,MAAN,GAAe,WAAf;AACAT,MAAAA,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACG,OAArB;AACD,KAHD;AAID;AAnB8B,CAAD,CAAhC;AAsBA,OAAO,MAAM;AAAEL,EAAAA,SAAF;AAAaW,EAAAA,SAAb;AAAwBP,EAAAA;AAAxB,IAA6CV,YAAY,CAACkB,OAAhE;AAEP,eAAelB,YAAY,CAACmB,OAA5B","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nexport const fetchTodo = createAsyncThunk(\"todos\", async () => {\n  return fetch(\"https://jsonplaceholder.typicode.com/todos?_limit=5\")\n  .then(\n    (res) => res.json()\n  );  \n});\n\nconst CounterSlice = createSlice({\n  name: \"counter\",\n  initialState: {\n    currentState: \"loading\",\n    todos: [],\n  },\n  reducers: {\n    increment(state, action) {\n      state.value = state.value + 1;\n    },\n    incrementByValue(state, action) {\n      state.value += action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchTodo.fulfilled, (state, action) => {\n      state.status = \"fulfilled\";\n      state.todos = action.payload;\n    });\n  },\n});\n\nexport const { increment, decrement, incrementByValue } = CounterSlice.actions;\n\nexport default CounterSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}