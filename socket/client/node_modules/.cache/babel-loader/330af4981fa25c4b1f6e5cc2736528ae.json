{"ast":null,"code":"var _jsxFileName = \"/home/sakenrai/Projects/practise/src/second_test/SecondTest.jsx\";\nimport React from \"react\";\nimport Compressor from \"compressorjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndocument.getElementById(\"file\").addEventListener(\"change\", e => {\n  const file = e.target.files[0];\n\n  if (!file) {\n    return;\n  }\n\n  new Compressor(file, {\n    quality: 0.6,\n\n    // The compression process is asynchronous,\n    // which means you have to access the `result` in the `success` hook function.\n    success(result) {\n      const formData = new FormData(); // The third parameter is required for server\n\n      formData.append(\"file\", result, result.name); // Send the compressed image file to server with XMLHttpRequest.\n      // axios.post('/path/to/upload', formData).then(() => {\n      //   console.log('Upload success');\n      // });\n    },\n\n    error(err) {\n      console.log(err.message);\n    }\n\n  });\n});\n\nfunction SecondTest() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"file\",\n      accept: \"image/*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_c = SecondTest;\nexport default SecondTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"SecondTest\");","map":{"version":3,"sources":["/home/sakenrai/Projects/practise/src/second_test/SecondTest.jsx"],"names":["React","Compressor","document","getElementById","addEventListener","e","file","target","files","quality","success","result","formData","FormData","append","name","error","err","console","log","message","SecondTest"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEAC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,gBAAhC,CAAiD,QAAjD,EAA4DC,CAAD,IAAO;AAChE,QAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;;AAEA,MAAI,CAACF,IAAL,EAAW;AACT;AACD;;AAED,MAAIL,UAAJ,CAAeK,IAAf,EAAqB;AACnBG,IAAAA,OAAO,EAAE,GADU;;AAGnB;AACA;AACAC,IAAAA,OAAO,CAACC,MAAD,EAAS;AACd,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB,CADc,CAGd;;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,MAAxB,EAAgCA,MAAM,CAACI,IAAvC,EAJc,CAMd;AAEA;AACA;AACA;AACD,KAhBkB;;AAiBnBC,IAAAA,KAAK,CAACC,GAAD,EAAM;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACD;;AAnBkB,GAArB;AAqBD,CA5BD;;AA8BA,SAASC,UAAT,GAAsB;AACpB,sBACE;AAAA,2BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,MAAtB;AAA6B,MAAA,MAAM,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KANQA,U;AAQT,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport Compressor from \"compressorjs\";\n\ndocument.getElementById(\"file\").addEventListener(\"change\", (e) => {\n  const file = e.target.files[0];\n\n  if (!file) {\n    return;\n  }\n\n  new Compressor(file, {\n    quality: 0.6,\n\n    // The compression process is asynchronous,\n    // which means you have to access the `result` in the `success` hook function.\n    success(result) {\n      const formData = new FormData();\n\n      // The third parameter is required for server\n      formData.append(\"file\", result, result.name);\n\n      // Send the compressed image file to server with XMLHttpRequest.\n\n      // axios.post('/path/to/upload', formData).then(() => {\n      //   console.log('Upload success');\n      // });\n    },\n    error(err) {\n      console.log(err.message);\n    },\n  });\n});\n\nfunction SecondTest() {\n  return (\n    <div>\n      <input type=\"file\" id=\"file\" accept=\"image/*\"></input>\n    </div>\n  );\n}\n\nexport default SecondTest;\n"]},"metadata":{},"sourceType":"module"}