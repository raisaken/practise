{"ast":null,"code":"var _jsxFileName = \"/home/sakenrai/Projects/test/socket/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { increment, incrementByValue } from \"./ReduxToolkit/features/posts/PostSlice\";\nimport { fetchTodo } from \"./ReduxToolkit/features/posts/PostSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const value = useSelector(state => state.counter.value);\n  const dispatch = useDispatch();\n  const [newvalue, setNewValue] = useState(); // dispatch(fetchTodo());\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [value, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(increment()),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      onChange: e => setNewValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        dispatch(incrementByValue(Number(newvalue)));\n      },\n      children: \"increm by value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(fetchTodo()),\n      children: \" fetchTodo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pkpZXitmKX6LQ9svfAsKm2whilk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/sakenrai/Projects/test/socket/client/src/App.js"],"names":["React","useState","useDispatch","useSelector","increment","incrementByValue","fetchTodo","App","value","state","counter","dispatch","newvalue","setNewValue","e","target","Number"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,gBAApB,QAA4C,yCAA5C;AACA,SAASC,SAAT,QAA0B,yCAA1B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,KAAK,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcF,KAA1B,CAAzB;AACA,QAAMG,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,EAAxC,CAHa,CAIb;;AACA,sBACE;AAAA,eACGO,KADH,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMG,QAAQ,CAACP,SAAS,EAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,QAAQ,EAAGU,CAAD,IAAOD,WAAW,CAACC,CAAC,CAACC,MAAF,CAASP,KAAV;AAAjD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AACE,MAAA,OAAO,EAAE,MAAM;AACbG,QAAAA,QAAQ,CAACN,gBAAgB,CAACW,MAAM,CAACJ,QAAD,CAAP,CAAjB,CAAR;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAWE;AAAQ,MAAA,OAAO,EAAE,MAAMD,QAAQ,CAACL,SAAS,EAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GApBQC,G;UACOJ,W,EACGD,W;;;KAFVK,G;AAsBT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { increment, incrementByValue } from \"./ReduxToolkit/features/posts/PostSlice\";\nimport { fetchTodo } from \"./ReduxToolkit/features/posts/PostSlice\";\n\nfunction App() {\n  const value = useSelector((state) => state.counter.value);\n  const dispatch = useDispatch();\n  const [newvalue, setNewValue] = useState();\n  // dispatch(fetchTodo());\n  return (\n    <div>\n      {value}\n      <button onClick={() => dispatch(increment())}>+</button>\n      <input type=\"number\" onChange={(e) => setNewValue(e.target.value)} />\n      <button\n        onClick={() => {\n          dispatch(incrementByValue(Number(newvalue)));\n        }}\n      >\n        increm by value\n      </button>\n      <button onClick={() => dispatch(fetchTodo())}> fetchTodo</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}